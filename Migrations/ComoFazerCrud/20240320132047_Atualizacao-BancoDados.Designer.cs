// <auto-generated />
using System;
using ComoFazerCrud.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ComoFazerCrud.Migrations.ComoFazerCrud
{
    [DbContext(typeof(ComoFazerCrudContext))]
    [Migration("20240320132047_Atualizacao-BancoDados")]
    partial class AtualizacaoBancoDados
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("ComoFazerCrud.Models.Login", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("E-mail");

                    b.Property<bool>("Cliente")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("Cliente");

                    b.Property<string>("Nome")
                        .HasColumnType("longtext")
                        .HasColumnName("Nome");

                    b.Property<string>("Senha")
                        .HasColumnType("longtext")
                        .HasColumnName("Senha");

                    b.HasKey("Id");

                    b.ToTable("Login");
                });

            modelBuilder.Entity("ComoFazerCrud.Models.Publicacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<byte[]>("Imagem")
                        .IsRequired()
                        .HasColumnType("longblob")
                        .HasColumnName("Imagem");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("Nome");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int")
                        .HasColumnName("Quantidade");

                    b.Property<float>("Valor")
                        .HasColumnType("float")
                        .HasColumnName("Valor");

                    b.HasKey("Id");

                    b.ToTable("Publicacao");
                });

            modelBuilder.Entity("ComoFazerCrud.Models.Servicos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataDeEntrega")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("Data de entrega");

                    b.Property<string>("Modelo")
                        .HasColumnType("longtext")
                        .HasColumnName("Modelo");

                    b.Property<string>("Ordem")
                        .HasColumnType("longtext")
                        .HasColumnName("Ordem");

                    b.Property<bool>("Pago")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("Pago");

                    b.Property<float>("Valor")
                        .HasColumnType("float")
                        .HasColumnName("Valor");

                    b.HasKey("Id");

                    b.ToTable("Servicos");
                });
#pragma warning restore 612, 618
        }
    }
}
